pipeline {
    agent any
    
    tools {
        maven "maven default"
    }
    
    stages {
        stage('Git fetch') {
            steps {
                git 'https://github.com/Dsg503/Sesion05.git'
            }
        }
        stage('Compile, Test, Package') {
            steps {
                sh "mvn -f Sesion05dsg503/pom.xml clean package"
            }
            post {
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts '**/target/*.jar'
                    jacoco(
                        execPattern: '**/target/jacoco.exec',
                        classPattern: '**/target/classes',
                        sourcePattern: '**/src/',
                        exclusionPattern: '**/test/',
                        minimumInstructionCoverage: '70',
                        maximumInstructionCoverage: '85',
                        maximumBranchCoverage: '85',
	                    minimumBranchCoverage: '70',
                        maximumClassCoverage: '85',
	                    minimumClassCoverage: '70',
                        maximumComplexityCoverage: '85',
            	        minimumComplexityCoverage: '70',
                        maximumLineCoverage: '85',
            	        minimumLineCoverage: '70',
                        maximumMethodCoverage: '85',
            	        minimumMethodCoverage: '70'
                    )
                    publishCoverage adapters: [jacocoAdapter('**/target/site/jacoco/jacoco.xml')]
                }
            }
        }
        stage ('FindBugs') {
            steps {
                sh "mvn -f Sesion05dsg503/pom.xml findbugs:findbugs"
            }
        }
        stage ('SpotBugs') {
            steps {
                sh "mvn -f Sesion05dsg503/pom.xml com.github.spotbugs:spotbugs-maven-plugin:4.7.0.0:spotbugs"
            }
        }
        stage ('Analysis') {
            steps {
                sh "mvn -f Sesion05dsg503/pom.xml site"
            }
            post {
                success {
                    dependencyCheckPublisher pattern: '**/target/site/dependency-check-report.xml'
                    recordIssues enabledForFailure: true, tool: checkStyle()
                    recordIssues enabledForFailure: true, tool: pmdParser()
                    recordIssues enabledForFailure: true, tool: cpd()
                    recordIssues enabledForFailure: true, tool: findBugs()
                    recordIssues enabledForFailure: true, tool: spotBugs()
                }
            }
        }
        stage ('Documentation') {
            steps {
                sh "mvn -f Sesion05dsg503/pom.xml javadoc:javadoc javadoc:aggregate"
            }
            post {
                success {
                    step $class: 'JavadocArchiver', javadocDir: 'Sesion05dsg503/target/site/apidocs', keepAll: false
                    publishHTML(target: [reportName: 'Maven Site', reportDir: 'Sesion05dsg503/target/site', reportFiles: 'index.html', keepAll: false])
                }
            }
        }
    }
}